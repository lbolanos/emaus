name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: NODE_OPTIONS='--max-old-space-size=6144' pnpm build
      env:
        NODE_OPTIONS: '--max-old-space-size=6144'

    - name: Create release archives
      run: |
        # Create web app archive
        cd apps/web/dist
        tar -czf ../../../web-dist.tar.gz .
        cd ../../..

        # Create API archive
        cd apps/api/dist
        tar -czf ../../../api-dist.tar.gz .
        cd ../../..

        # List files for verification
        ls -la *.tar.gz

    - name: Generate release notes
      id: release_notes
      run: |
        cat << EOF > release_notes.md
        ## Release ${{ github.ref_name }}
        
        ### ðŸ“¦ Build Artifacts
        - \`web-dist.tar.gz\` - Web application distribution
        - \`api-dist.tar.gz\` - API server distribution
        
        ### ðŸš€ Deployment Instructions
        
        Download and deploy using the release script:
        
        \`\`\`bash
        export GITHUB_REPO=${{ github.repository }}
        export RELEASE_TAG=${{ github.ref_name }}
        ./release-from-github.sh
        \`\`\`
        
        Or manually download and extract:
        
        \`\`\`bash
        # Download artifacts
        wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/web-dist.tar.gz
        wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/api-dist.tar.gz
        
        # Extract
        tar -xzf web-dist.tar.gz -C /path/to/web
        tar -xzf api-dist.tar.gz -C /path/to/api
        \`\`\`
        
        ### ðŸ“Š Build Information
        - **Node Version:** 20
        - **Build Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        - **Commit:** ${{ github.sha }}
        EOF
        
        echo "Release notes generated"

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}
        files: |
          web-dist.tar.gz
          api-dist.tar.gz
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Summary
      run: |
        echo "âœ… Build and Release completed successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ðŸ“¦ Released Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
        echo "|------|------|" >> $GITHUB_STEP_SUMMARY
        echo "| web-dist.tar.gz | $(ls -lh web-dist.tar.gz | awk '{print $5}') |" >> $GITHUB_STEP_SUMMARY
        echo "| api-dist.tar.gz | $(ls -lh api-dist.tar.gz | awk '{print $5}') |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ðŸ”— Release URL" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ðŸš€ Deploy Commands" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "export GITHUB_REPO=${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "export RELEASE_TAG=${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "./release-from-github.sh" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY