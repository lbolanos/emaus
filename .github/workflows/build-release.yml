name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: NODE_OPTIONS='--max-old-space-size=6144' pnpm build
      env:
        NODE_OPTIONS: '--max-old-space-size=6144'

    - name: Create release archives
      run: |
        # Create web app archive
        cd apps/web/dist
        tar -czf ../../../web-dist.tar.gz .
        cd ../../..

        # Create API archive
        cd apps/api/dist
        tar -czf ../../../api-dist.tar.gz .
        cd ../../..

        # List files
        ls -la *.tar.gz

    - name: Build Summary
      run: |
        echo "‚úÖ Build completed successfully!"
        echo "üìä Build artifacts:"
        ls -lh *.tar.gz
        echo ""
        echo "üìù Manual Release Creation Steps:"
        echo "1. Go to: https://github.com/${{ github.repository }}/releases/new"
        echo "2. Choose tag: ${{ github.ref_name }}"
        echo "3. Title: Release ${{ github.ref_name }}"
        echo "4. Upload these files:"
        echo "   - web-dist.tar.gz"
        echo "   - api-dist.tar.gz"
        echo "5. Publish the release"
        echo ""
        echo "üöÄ Then deploy from your VPS:"
        echo "export GITHUB_REPO=${{ github.repository }}"
        echo "export RELEASE_TAG=${{ github.ref_name }}"
        echo "./release-from-github.sh"
